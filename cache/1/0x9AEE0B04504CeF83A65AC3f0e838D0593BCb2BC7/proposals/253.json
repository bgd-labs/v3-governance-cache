{
  "events": [
    {
      "eventName": "ProposalCreated",
      "args": {
        "proposalId": "253",
        "creator": "0xf71fc92e2949ccF6A5Fd369a0b402ba80Bc61E02",
        "accessLevel": 1,
        "ipfsHash": "0x3a9e0990b0c828e0af7b602f29273c4166a628d8b2249896fac69c12cc8f7b5a"
      },
      "address": "0x9aee0b04504cef83a65ac3f0e838d0593bcb2bc7",
      "blockHash": "0x9fd9e1d1e497e881f6d8636d807ecf7409805a599026792c86a130a2b36ae1fa",
      "blockNumber": "21887031",
      "data": "0x3a9e0990b0c828e0af7b602f29273c4166a628d8b2249896fac69c12cc8f7b5a",
      "logIndex": 247,
      "removed": false,
      "topics": [
        "0xcc914becfa276bbc067049bf8db2d34ebbdc1bafa851e4d4936aaed376c08dbe",
        "0x00000000000000000000000000000000000000000000000000000000000000fd",
        "0x000000000000000000000000f71fc92e2949ccf6a5fd369a0b402ba80bc61e02",
        "0x0000000000000000000000000000000000000000000000000000000000000001"
      ],
      "transactionHash": "0x2a356d8ddfc194f8312a71129a3379023c2e9c9d104e36e7b63bae9d90afe92e",
      "transactionIndex": 93,
      "timestamp": 1740047975
    },
    {
      "eventName": "VotingActivated",
      "args": {
        "proposalId": "253",
        "snapshotBlockHash": "0x239bc8a1999c5dfec9ca01006f3c50688476e42dbcb42758a0e1a5b0b578337d",
        "votingDuration": 259200
      },
      "address": "0x9aee0b04504cef83a65ac3f0e838d0593bcb2bc7",
      "blockHash": "0x1cc391963c7374941da7e413c4fa0c72a4c73ee871cf5c79eb9e2d9048718ef3",
      "blockNumber": "21894173",
      "data": "0x000000000000000000000000000000000000000000000000000000000003f480",
      "logIndex": 54,
      "removed": false,
      "topics": [
        "0x45f1db29750f423920a6edede3a80ea19ceb9de3eabc072078eb539ca348dca0",
        "0x00000000000000000000000000000000000000000000000000000000000000fd",
        "0x239bc8a1999c5dfec9ca01006f3c50688476e42dbcb42758a0e1a5b0b578337d"
      ],
      "transactionHash": "0x9be16b744191dc8fd2c5cb6967680376c4b2f8fb5b57693c4a972687cfee5d09",
      "transactionIndex": 9,
      "timestamp": 1740134399
    }
  ],
  "proposal": {
    "state": 2,
    "accessLevel": 1,
    "creationTime": 1740047975,
    "votingDuration": 259200,
    "votingActivationTime": 1740134399,
    "queuingTime": 0,
    "cancelTimestamp": 0,
    "creator": "0xf71fc92e2949ccF6A5Fd369a0b402ba80Bc61E02",
    "votingPortal": "0x9b24C168d6A76b5459B1d47071a54962a4df36c3",
    "snapshotBlockHash": "0x239bc8a1999c5dfec9ca01006f3c50688476e42dbcb42758a0e1a5b0b578337d",
    "ipfsHash": "0x3a9e0990b0c828e0af7b602f29273c4166a628d8b2249896fac69c12cc8f7b5a",
    "forVotes": "0",
    "againstVotes": "0",
    "cancellationFee": "50000000000000000",
    "payloads": [
      {
        "chain": "42161",
        "accessLevel": 1,
        "payloadsController": "0x89644CA1bB8064760312AE4F03ea41b05dA3637C",
        "payloadId": 75
      }
    ]
  },
  "ipfs": {
    "ipfsHash": "QmSHU8CwAUqgnzMGPGn8xD2rzwDqiMHq7kC63dBo36EW6D",
    "description": "\n## Simple Summary\n\nThis proposal activates the automated Aave Generalized Risk Stewards (AGRS) system on the Arbitrum Instance to perform automated supply and borrow cap updates.\nUnder the hood, the AGRS consumes risk recommendations from the Edge infrastructure by Chaos Labs.\n\n## Motivation\n\nThe current implementation of manual AGRS allows for the periodic manual updating of Supply and Borrow caps, generally performed in response to market demand. The high volume of updates, combined with the manual triggering of supply and borrow cap simulations, written analyses, and coordination across multiple service providers, often leads to delays in implementing cap increases.\nThese delays can hinder potential growth opportunities for underlying assets that might otherwise contribute significantly, but more importantly, they create overhead to have tighter risk configurations and dynamism.\n\nThis new component of AGRS follows the example of interest rate updates for WETH on v3 Prime Ethereum ([this proposal](https://vote.onaave.com/proposal/?proposalId=200), in production for some time.\n\n## Specification\n\nThe automated AGRS will use another instance of AGRS (exactly the same codebase as the other model), but with the following constraints:\n\n- This instance will only have configurable caps-related parameters: supplyCap and borrowCap.\n- Recommendations of these parameters will be submitted to a RiskOracle smart contract, from the Edge off-chain infrastructure.\n- Between the risk oracle smart contract and the AGRS contract, there will be a very thin middleware AaveStewardCapsInjector, which will have the following logic:\n  - Will take recommendations from the Edge Risk Oracle side and propagate them to the AGRS contract.\n  - Enforce that only the whitelisted asset can be acted upon.\n  - Given the protections (percentage constraints and time delay) on the AGRS side and that it is an assumption that risk recommendation will be timing correct updates on the Edge Risk Oracle, the propagation will be permissionless.\n\nThe [AaveStewardCapsInjector](https://arbiscan.io/address/0x35d53dEB2F6f40Ea7af32B6F8BEd88eA966DF1D9) middleware, technically being part of the Aave Robot infrastructure, will run on Chainlink Automation and will be registered using the [AaveCLRobotOperator](https://arbiscan.io/address/0xaa944aD95e51CB83C1f35FAEEDfC7d2c31B0BB4d) contract with 50 LINK from the Arbitrum Collector.\n\nThe new instance of the [RiskSteward](https://arbiscan.io/address/0x085e34722e04567df9e6d2c32e82fd74f3342e79) will be given the RiskAdmin role with the following method: `ACL_MANAGER.addRiskAdmin()`\n\nPlease note that only the following assets on Arbitrum instance have been whitelisted for automatic AGRS system, enforced strictly on the AaveStewardCapsInjector contract: [WETH](https://arbiscan.io/address/0x82aF49447D8a07e3bd95BD0d56f35241523fBab1), [USDC](https://arbiscan.io/address/0xaf88d065e77c8cC2239327C5EDb3A432268e5831), [USDT](https://arbiscan.io/address/0xFd086bC7CD5C481DCC9C85ebE478A1C0b69FCbb9), [WBTC](https://arbiscan.io/address/0x2f2a2543B76A4166549F7aaB2e75Bef0aefC5B0f), [DAI](https://arbiscan.io/address/0xDA10009cBd5D07dd0CeCc66161FC93D7c9000da1), [weETH](https://arbiscan.io/address/0x35751007a407ca6FEFfE80b3cB397736D2cf4dbe), [ARB](https://arbiscan.io/address/0x912CE59144191C1204E64559FE8253a0e49E6548), [USDC.e](https://arbiscan.io/address/0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8), [GHO](https://arbiscan.io/address/0x7dfF72693f6A4149b17e7C6314655f6A9F7c8B33), [LINK](https://arbiscan.io/address/0xf97f4df75117a78c1A5a0DBb814Af92458539FB4), [wstETH](https://arbiscan.io/address/0x5979D7b546E38E414F7E9822514be443A4800529), [LUSD](https://arbiscan.io/address/0x93b346b6BC2548dA6A1E7d98E9a421B42541425b), [FRAX](https://arbiscan.io/address/0x17FC002b466eEc40DaE837Fc4bE5c67993ddBd6F), [rETH](https://arbiscan.io/address/0xEC70Dcb4A1EFa46b8F2D97C310C9c4790ba5ffA8), [AAVE](https://arbiscan.io/address/0xba5DdD1f9d7F570dc94a51479a000E3BCE967196)\n\n### AGRS\n\nThe automated AGRS system will be configured with the following params:\n\n| **Parameter** | **Percent change allowed** | **minimumDelay** |\n| ------------- | -------------------------- | ---------------- |\n| Supply Cap    | 30% (relative change)      | 3 days           |\n| Borrow Cap    | 30% (relative change)      | 3 days           |\n\n### Edge Risk Oracle\n\nThe methodology used by the Edge Risk Oracle to suggest cap updates is described on the governance forum [here](https://governance.aave.com/t/arfc-supply-and-borrow-cap-risk-oracle-activation/20834).\n\n## References\n\n- Implementation: [Payload](https://github.com/bgd-labs/aave-proposals-v3/blob/d273e3c2f3b1c5f0d5d6963664ef8d6dc09cd798/src/20250218_AaveV3Arbitrum_CapsRiskOracleActivationOnArbitrum/AaveV3Arbitrum_CapsRiskOracleActivationOnArbitrum_20250218.sol)\n- Tests: [Payload](https://github.com/bgd-labs/aave-proposals-v3/blob/d273e3c2f3b1c5f0d5d6963664ef8d6dc09cd798/src/20250218_AaveV3Arbitrum_CapsRiskOracleActivationOnArbitrum/AaveV3Arbitrum_CapsRiskOracleActivationOnArbitrum_20250218.t.sol), [AaveStewardsInjectorCaps](https://github.com/aave-dao/aave-v3-risk-stewards/blob/dcfb2aca52f5cae34a68c2d5da8ba0f9260a0ee5/tests/AaveStewardsInjectorCaps.t.sol), [EdgeRiskStewardCaps](https://github.com/aave-dao/aave-v3-risk-stewards/blob/dcfb2aca52f5cae34a68c2d5da8ba0f9260a0ee5/tests/EdgeRiskStewardCaps.t.sol)\n- [Snapshot](https://snapshot.box/#/s:aave.eth/proposal/0x1d8d0d25f3b705bf207a130308658d15256e2cebc58d123e4ad9e7e3a177ac11)\n- [Discussion](https://governance.aave.com/t/arfc-supply-and-borrow-cap-risk-oracle-activation/20834)\n- AaveStewardsInjectorCaps: [github](https://github.com/aave-dao/aave-v3-risk-stewards/blob/dcfb2aca52f5cae34a68c2d5da8ba0f9260a0ee5/src/contracts/AaveStewardInjectorCaps.sol), [deployed-contract](https://arbiscan.io/address/0x35d53dEB2F6f40Ea7af32B6F8BEd88eA966DF1D9)\n- EdgeRiskStewardCaps: [github](https://github.com/aave-dao/aave-v3-risk-stewards/blob/dcfb2aca52f5cae34a68c2d5da8ba0f9260a0ee5/src/contracts/EdgeRiskStewardCaps.sol), [deployed-contract](https://arbiscan.io/address/0x085E34722e04567Df9E6d2c32e82fd74f3342e79)\n- EdgeRiskOracle: [github](https://github.com/ChaosLabsInc/risk-oracle/blob/be09f47d749985f9537e185016d0f81c003a9fc9/src/RiskOracle.sol), [deployed-contract](https://arbiscan.io/address/0x861eeAdB55E41f161F31Acb1BFD4c70E3a964Aed)\n\n## Copyright\n\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/).\n",
    "title": "Caps Risk Oracle Activation on Arbitrum",
    "author": "BGD Labs (@bgdlabs)",
    "discussions": "https://governance.aave.com/t/arfc-supply-and-borrow-cap-risk-oracle-activation/20834",
    "snapshot": "https://snapshot.box/#/s:aave.eth/proposal/0x1d8d0d25f3b705bf207a130308658d15256e2cebc58d123e4ad9e7e3a177ac11"
  }
}